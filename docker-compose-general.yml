version: "3.8"

# Project name
name: rps-app

services:
  mongo:
    container_name: mongodb
    image: mongo:${MONGO_VERSION}
    hostname: ${MONGO_HOSTNAME}
    restart: on-failure
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 28017:27017 # docker host port / container port
    expose:
      - 27017 # opens port 27017 on the container
    env_file:
      - .env
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE} # the database
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME} # the database admin user
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD} # the database admin user password
    volumes:
      - mongodb-data:/data/db # creating a volume to save MongoDB data locally
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  mariadb:
    container_name: mariadb
    image: bitnami/mariadb:${MARIADB_VERSION}
    hostname: ${MARIADB_HOSTNAME}
    restart: on-failure
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 13306:3306 # external port / container port
    env_file:
      - .env
    expose:
      - 3306 # opens port 3306 on the container
    environment:
      - MARIADB_ROOT_USER=${MARIADB_ROOT_USER} # the database admin user
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD} # the database admin user password
    volumes:
      - mariadb-data:/bitnami/mariadb # creating a volume to save MariaDB data locally
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  adminer:
    container_name: adminer
    image: adminer:${ADMINER_VERSION}
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 19080:8080 # external port / container port
    env_file:
      - .env
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  # Redis is a high performance key-value database. It shores cached values.
  cache:
    container_name: redis
    image: bitnami/redis:${REDIS_VERSION}
    hostname: ${REDIS_HOSTNAME}
    restart: on-failure
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 16379:6379 # external port / container port
    env_file:
      - .env
    command: redis-server --save 20 1 --loglevel warning --protected-mode no --stop-writes-on-bgsave-error no
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    volumes:
      - cache-data:/bitnami/redis/data # creating a volume to save Redis data locally
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

# persistent volumes location
volumes:
  mongodb-data:
    driver: local
  mariadb-data:
    driver: local
  cache-data:
    driver: local

# networks
networks:
  rps_net:
    name: ${BACKEND_NETWORK}
