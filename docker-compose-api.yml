version: "3.8"

services:
  # Nginx reverse proxy server acts as api gateway.
  nginx:
    container_name: nginx
    hostname: ${NGINX_HOSTNAME}
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: on-failure
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 80:80 # NGINX HTTP, external port / container port
    #      - 443:443 # NGINX HTTPS, external port / container port
    volumes:
      - ./infrastructure/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./infrastructure/ssl:/ssl
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  # The Health Monitoring application monitors microservices health
  # https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health
  webstatus:
    container_name: webstatus
    build:
      context: .
      dockerfile: ./docker/webstatus/Dockerfile
    hostname: webstatus
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Logging:LogLevel:Default=Debug
      - Logging:Loglevel:Microsoft=Warning
      - Logging:LogLevel:HealthChecks=Debug
      - HealthChecksUI__HealthChecks__0__Name=Rock Paper Scissors Game
      - HealthChecksUI__HealthChecks__0__Uri=http://host.docker.internal/status/hc
    ports:
      - 5000:5000 # external port / container port
    depends_on:
      - nginx
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

# networks
networks:
  rps_net:
    name: ${BACKEND_NETWORK}
