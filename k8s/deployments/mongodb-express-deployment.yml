# Kibana deployment configuration
# Web interface for searching and visualizing logs
apiVersion: apps/v1 # K8S API version
kind: Deployment
metadata: # Describes information about the app
  name: mongodb-express-deployment
  namespace: kube-nosql-db # The name of the namespace
  labels:
    app: mongodb-express
    tier: database
spec:
  replicas: 1 # Number of replicas that will be created for this deployment
  selector:
    matchLabels:
      app: mongodb-express
      tier: database
  strategy:
    type: RollingUpdate # It replaces the existing version of pods with a new version, updating pods slowly one by one, without cluster downtime
    rollingUpdate:
      maxSurge: 2 # Specifies the maximum number of pods the Deployment is allowed to create at one time
      maxUnavailable: 1 # Specifies the maximum number of pods that are allowed to be unavailable during the rollout
  template: # Blueprint for pods
    metadata:
      labels:
        app: mongodb-express
        tier: database
    spec: # Specification for pods
      containers:
        - name: mongodb-express
          image: mongo-express:0.54.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-8081
              protocol: TCP
              containerPort: 8081
          env: # Setting environmental variables https://github.com/mongo-express/mongo-express#usage-docker
            - name: ME_CONFIG_MONGODB_AUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-auth-username
            - name: ME_CONFIG_MONGODB_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-auth-password
            - name: ME_CONFIG_BASICAUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-basicauth-username
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-basicauth-password
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-root-username
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodb-root-password
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: mongodb-configmap
                  key: mongodb-database-url
            - name: ME_CONFIG_MONGODB_AUTH_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mongodb-configmap
                  key: mongodb-auth-database
            - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
              valueFrom:
                configMapKeyRef:
                  name: mongodb-configmap
                  key: is-mongodb-config-admin-enabled
          # Mount volume from persistent volume claim
          volumeMounts:
            - name: config-volume # a mount for config
              mountPath: /etc/mongodb-express/config
              readOnly: true
            - name: secrets-volume # a mount for secrets
              mountPath: /etc/mongodb-express/secrets
              readOnly: true
          resources:
            limits:
              cpu: 1000m # max 1 vCPU to the Kibana Pod
            #              memory: 512Mi
            requests:
              cpu: 100m # guarantees 0.1 vCPU to the Kibana Pod
      #              memory: 100Mi
      # Previously defined ConfigMap object
      volumes:
        - name: config-volume
          configMap:
            name: mongodb-configmap
        - name: secrets-volume
          secret:
            secretName: mongodb-secret
            optional: true
      restartPolicy: Always
