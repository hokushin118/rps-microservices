# ConfigMap holds information about Score Query microservice configuration files
apiVersion: v1 # K8S API version
kind: ConfigMap
metadata:
  name: score-qry-service-configmap
  namespace: rps-app-dev # The name of the namespace
  labels:
    app: score-qry-service
    tier: backend
    environment: development
data:

  server-port: "8080"
  grpc-server-port: "50051"
  grpc-server-security-enabled: "false"
  grpc-reflection-service-enabled: "on" # Turn off the service listing (for both actuator and grpc) on production
  grpc-security-enabled: "false" # Turn on the grpc service transport security on production
  grpc-server-security-certificate-chain: "file:/etc/ssl/certs/grpc.score.qry.internal.crt"
  grpc-server-security-private-key: "file:/etc/ssl/certs/grpc.score.qry.internal.key"
  grpc-server-security-trust-cert-collection: "file:/etc/ssl/certs/rps.clients.crt.collection" # mTLS - trusted clients cert collection, cat client*.crt > trusted-clients.crt.collection
  grpc-server-security-client-auth: "REQUIRE" # mTLS - makes client certificate authentication mandatory
  mariadb-url: mariadb-sts-0.mariadb-svc.kube-db
  mariadb-port: "3306"
  mariadb-database: scoreDB
  redis-url: redis-sts-0.redis-svc.kube-cache
  redis-port: "6379"
  kafka-broker-0-hostname: kafka-0.kafka-headless.kube-kafka.svc.cluster.local
  kafka-broker-1-hostname: kafka-1.kafka-headless.kube-kafka.svc.cluster.local
  kafka-broker-2-hostname: kafka-2.kafka-headless.kube-kafka.svc.cluster.local
  kafka-broker-0-port: "9092"
  kafka-broker-1-port: "9092"
  kafka-broker-2-port: "9092"

---
# ConfigMap holds information about Score Query microservice oauth2-proxy container configuration files
apiVersion: v1 # K8S API version
kind: ConfigMap
metadata:
  name: score-qry-service-oauth-configmap
  namespace: rps-app-dev # The name of the namespace
  labels:
    app: score-qry-service
    tier: backend
    environment: development
data:
  oauth2-proxy.cfg: |+
    http_address="0.0.0.0:4180"
    cookie_secret="OQINaROshtE9TcZkNAm-5Zs2Pv3xaWytBmc5W7sPX7w="
    cookie_secure="false"
    email_domains='*'

    pass_authorization_header="true"
    pass_access_token="true"

    set_authorization_header=true
    ssl_insecure_skip_verify=true
    ssl_upstream_insecure_skip_verify=true

    # the http url(s) of the upstream endpoint. If multiple, routing is based on path
    upstreams="http://127.0.0.1:8080/"

    cookie_domains=[".rps.internal"] # Required so cookie can be read on all subdomains.
    whitelist_domains=[".rps.internal"] # Required to allow redirection back to original requested target.

    # keycloak provider
    provider="keycloak-oidc"
    provider_display_name="Keycloak"

    client_secret="H0fnsBnCc7Ts22rxhvLcy66s1yvzSRgG"
    client_id="oauth2-proxy"

    oidc_issuer_url="https://kc.internal/realms/rps-dev"

    redirect_url="https://rps.internal/score-qry-api/oauth2/callback"
