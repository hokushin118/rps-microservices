# RPS Game Command microservice deployment configuration
apiVersion: apps/v1 # K8S API version
kind: Deployment
metadata: # Describes information about the app
  name: rps-cmd-service-deployment
  namespace: rps-app-dev # The name of the namespace
  labels:
    app: rps-cmd-service
    tier: backend
spec:
  replicas: 1 # Number of replicas that will be created for this deployment
  selector:
    matchLabels:
      app: rps-cmd-service
      tier: backend
  strategy:
    type: RollingUpdate # It replaces the existing version of pods with a new version, updating pods slowly one by one, without cluster downtime
    rollingUpdate:
      maxSurge: 2 # Specifies the maximum number of pods the Deployment is allowed to create at one time
      maxUnavailable: 1 # Specifies the maximum number of pods that are allowed to be unavailable during the rollout
  template: # a blueprint for pods
    metadata:
      labels:
        app: rps-cmd-service
        tier: backend
      annotations: # https://www.elastic.co/guide/en/beats/filebeat/current/running-on-kubernetes.html
        co.elastic.logs/enabled: "true"
        co.elastic.logs.json-logging/json.keys_under_root: "true"
        co.elastic.logs.json-logging/json.add_error_key: "true"
        co.elastic.logs.json-logging/json.message_key: "message"
    spec: # specification for pods
      terminationGracePeriodSeconds: 10 # It gives microservice 10 seconds to shut down gracefully upon receiving a SIGTERM signal
      containers:
        - name: rps-cmd-service
          image: hokushin/rps-cmd-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-8080
              protocol: TCP
              containerPort: 8080 # The port that the container is running on in the cluster
          resources:
            limits:
              cpu: 100m
            requests:
              cpu: 50m
          env: # Setting environmental variables
            - name: KAFKA_HOSTNAME_1
              value: "kafka-1"
            - name: KAFKA_BROKER_PORT_1
              value: "9093"
            - name: KAFKA_HOSTNAME_2
              value: "kafka-2"
            - name: KAFKA_BROKER_PORT_2
              value: "9094"
            - name: KAFKA_HOSTNAME_3
              value: "kafka-3"
            - name: KAFKA_BROKER_PORT_3
              value: "9095"
            - name: MONGO_HOSTNAME
              value: "mongodb"
            - name: OPEN_API_URL
              value: "rps-cmd-service"
            - name: RPS_CMD_SERVER_PORT
              value: "8080"
            - name: RPS_CMD_GRPC_SERVER_PORT
              value: "6565"
#          readinessProbe:
#            httpGet:
#              port: 8080
#              path: /actuator/health/readiness
#            initialDelaySeconds: 5
#            timeoutSeconds: 1
#            periodSeconds: 5
#          livenessProbe:
#            httpGet:
#              port: 8080
#              path: /actuator/health/liveness
#            initialDelaySeconds: 30
#            timeoutSeconds: 1
#            periodSeconds: 5
