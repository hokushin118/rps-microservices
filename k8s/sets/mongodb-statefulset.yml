# MongoDB Statefulset for Kubernetes
# https://kubernetes.io/blog/2017/01/running-mongodb-on-kubernetes-with-statefulsets
apiVersion: apps/v1 # K8S API version
kind: StatefulSet
metadata:
  name: mongodb-sts
  namespace: kube-nosql-db # The name of the namespace
  labels:
    app: mongodb
    tier: database
spec:
  selector:
    matchLabels:
      app: mongodb
      tier: database
  serviceName: mongodb-svc # link to mongodb service
  replicas: 3 # Number of replicas that will be created
  updateStrategy:
    type: RollingUpdate
  template: # a blueprint for pods
    metadata:
      labels:
        app: mongodb
        tier: database
    spec: # specification for pods
      serviceAccountName: mongodb
      terminationGracePeriodSeconds: 10 # It gives database 10 seconds to shut down gracefully upon receiving a SIGTERM signal
      containers:
        - name: mongodb
          image: mongo:4.4
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh" ]
          args: [ "-c", "mongod --replSet=rs0 --bind_ip_all" ] # create a new replica set with the name ‘rs0’.
          ports:
            - name: tcp-27017
              protocol: TCP
              containerPort: 27017
          # Mount volume from persistent volume claim
          volumeMounts:
            - name: mongodb-persistent-storage # a mount for data
              mountPath: /data/db
            - name: config-volume # a mount for config
              mountPath: /etc/mongodb/config
              readOnly: true
            - name: secrets-volume # a mount for secrets
              mountPath: /etc/mongodb/secrets
              readOnly: true
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGO_INITDB_DATABASE # the database
              valueFrom:
                configMapKeyRef: # Using ConfigMap
                  name: mongodb-configmap
                  key: mongodb-database
            - name: MONGO_INITDB_ROOT_USERNAME # the database admin user
              valueFrom:
                secretKeyRef: # Using Secrets
                  name: mongodb-secret
                  key: mongodb-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD # the database admin user password
              valueFrom:
                secretKeyRef: # Using Secrets
                  name: mongodb-secret
                  key: mongodb-root-password
            - name: MONGO_SIDECAR_POD_LABELS
              value: "app=mongodb,tier=database"
      volumes:
        - name: config-volume
          configMap:
            name: mongodb-configmap
            items:
              - key: mongo.conf
                path: mongo.conf
        - name: secrets-volume
          secret:
            secretName: mongodb-secret
            optional: true
        - name: initdb
          emptyDir: { }
  # PersistentVolumes for the MongoDB pods
  volumeClaimTemplates:
    - metadata:
        name: mongodb-persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
