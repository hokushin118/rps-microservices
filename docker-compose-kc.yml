version: "3.8"

services:
  # PostgreSQL object-relational database system is used as Keycloak data storage.
  postgresql:
    image: bitnami/postgresql:${KEYCLOAK_POSTGRES_VERSION}
    restart: unless-stopped
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 5432:5432 # external port / container port
    env_file:
      - .env
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_DATABASE=${KEYCLOAK_POSTGRES_DB_NAME}
      - POSTGRESQL_USERNAME=${KEYCLOAK_POSTGRES_DB_USER}
      - POSTGRESQL_PASSWORD=${KEYCLOAK_POSTGRES_DB_PASSWORD}
    volumes:
      - postgresql-data:/bitnami/postgresql  # creating a volume to save PostgreSQL data locally
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

  # Keycloak IAM (Identity and Access Management) service.
  keycloak:
    build:
      context: .
      dockerfile: ./docker/keycloak/Dockerfile
    restart: on-failure
    ports: # Important: In a production environment you should remove the external port that kept here for debugging purposes.
      - 8180:8080 # external port / container port
    env_file:
      - .env
    environment:
      # https://github.com/bitnami/containers/tree/main/bitnami/keycloak#configuration
      - KEYCLOAK_DATABASE_HOST=${KEYCLOAK_DATABASE_HOST}
      - KEYCLOAK_DATABASE_PORT=${KEYCLOAK_DATABASE_PORT}
      - KEYCLOAK_DATABASE_NAME=${KEYCLOAK_POSTGRES_DB_NAME}
      - KEYCLOAK_DATABASE_USER=${KEYCLOAK_POSTGRES_DB_USER}
      - KEYCLOAK_DATABASE_PASSWORD=${KEYCLOAK_POSTGRES_DB_PASSWORD}
      - KEYCLOAK_CREATE_ADMIN_USER=true # Creates admin user on start-up
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - postgresql
    networks:
      - ${BACKEND_NETWORK}
    deploy:
      replicas: 1

volumes:
  postgresql-data:
    driver: local

# networks
networks:
  rps_net:
    name: ${BACKEND_NETWORK}
