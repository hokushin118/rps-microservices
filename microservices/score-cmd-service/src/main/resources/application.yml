server:
  servlet:
    context-path: /score-cmd-api
  compression:
    enabled: true
  tomcat:
    threads:
      max: 100
  http2:
    # Enables http2 support
    enabled: true
  error:
    # Includes error attribute to message response
    include-message: always
    include-binding-errors: always
  # Use the underlying container's native support for forwarded headers
  forward-headers-strategy: native

spring:
  profiles:
    active: '@spring.profiles.active@'

  # Disables Redis auto-configuration
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration

  main:
    allow-bean-definition-overriding: true

  jmx:
    enabled: false

  # Mongo properties
  data:
    mongodb:
      auto-index-creation: true # enable auto index creation

  # Jackson properties
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      INDENT_OUTPUT: true
    time-zone: UTC

  # Kafka properties
  kafka:
    producer:
      client-id: '@project.artifactId@'
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      acks: all

  # Spring security configuration
  security:
    oauth2:
      # https://docs.spring.io/spring-security/reference/servlet/oauth2/client/index.html
      client:
        # Client registration configuration
        registration:
          # https://docs.spring.io/spring-security/reference/servlet/oauth2/client/core.html
          keycloak: # Instance name of the ClientRegistration object
            provider: keycloak
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.secret}
            authorization-grant-type: client_credentials
            # https://auth0.com/docs/get-started/apis/scopes/openid-connect-scopes
            scope:
              - openid # Returns the sub claim, which uniquely identifies the user. In an ID Token, iss, aud, exp, iat, and at_hash claims will also be present
              - profile # Returns claims that represent basic profile information, including name, family_name, given_name, middle_name, nickname, picture, and updated_at
            redirect-uri: http://${api.hostname}:${server.port}${server.servlet.context-path}/login/oauth2/code/${spring.application.name}
        # OIDC provider configuration
        provider:
          keycloak:
            issuer-uri: http://${keycloak.hostname}:${keycloak.port}/realms/${keycloak.realm}
      # Resource service configuration
      resourceserver:
        jwt:
          issuer-uri: http://${keycloak.hostname}:${keycloak.port}/realms/${keycloak.realm}
          # Used to verify JWT signature
          jwk-set-uri: http://${keycloak.hostname}:${keycloak.port}/realms/${keycloak.realm}/protocol/openid-connect/certs

# Actuator configuration
management:
  # context path  /api/actuator
  server:
    base-path: ${server.servlet.context-path}
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  endpoint:
    health:
      show-details: always
  info:
    git:
      mode: full

# Open Api 3.0 configuration
# https://springdoc.org
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    use-root-path: true
    oauth2-redirect-url: /swagger-ui/oauth2-redirect.html
    oauth:
      app-name: swagger-ui
      client-id: ${keycloak.client-id}
      realm: ${keycloak.realm}
  # packages to include
  packages-to-scan: com.al.qdt.score.cmd.api
  # enables pretty-printed output of the OpenApi specification
  writer-with-default-pretty-printer: true

# OpenApi configuration
api:
  dev:
    server:
      base-url: http://${api.hostname}:${server.port}${server.servlet.context-path}
      description: Dev server
  prod:
    server:
      base-url: http://${api.hostname}:8080${server.servlet.context-path}
      description: Prod server
  endpoint-scores: scores
  endpoint-admin: admin
  version-one: /v1
  version-one-async: /v1.1
  version-two: /v2
  version-two-async: /v2.1
  license-name: The GNU General Public License, Version 3
  license-url: https://www.gnu.org/licenses/gpl-3.0.txt

# Application configuration
app:
  # Executor configuration
  executor:
    core-pool-size: 2
    max-pool-size: 2
    queue-capacity: 500
    thread-name-prefix: async-thread
  # Kafka configuration
  kafka:
    max-in-flight-request-per-connection: 5
    is-idempotence-enabled: true

# Logging configuration
logging:
  file:
    path: ./var/log
  level:
    # Autoconfigure logging custom converters
    org.springframework.data.convert.CustomConversions: debug
